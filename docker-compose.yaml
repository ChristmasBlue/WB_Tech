version: '3.8'

services:
  wb_back:
    build:
      context: ./WB_back
      dockerfile: Dockerfile
    container_name: wb_back_service
    env_file:
      - .env
    environment:
      # Application
      - SERVER_ADDRESS=${SERVER_ADDRESS}
      
      # Kafka
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - KAFKA_GROUP_ID_GET=${KAFKA_GROUP_ID_GET}
      - KAFKA_GROUP_ID_ADD=${KAFKA_GROUP_ID_ADD}
      - KAFKA_KEY_GET_ORDER=${KAFKA_KEY_GET_ORDER}
      - KAFKA_KEY_ADD_ORDER=${KAFKA_KEY_ADD_ORDER}
      - KAFKA_KEY_SEND_ORDER=${KAFKA_KEY_SEND_ORDER}
      
      # Database
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:8080"  # Добавляем проброс порта
    networks:
      - app-net
    depends_on:
      - kafka

  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka_kraft
    hostname: kafka
    user: "root"
    ports: 
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_NODE_ID=${KAFKA_NODE_ID}
      - KAFKA_PROCESS_ROLES=${KAFKA_PROCESS_ROLES}
      - KAFKA_LISTENERS=${KAFKA_LISTENERS}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      - KAFKA_CONTROLLER_QUORUM_VOTERS=${KAFKA_CONTROLLER_QUORUM_VOTERS}
      - KAFKA_CONTROLLER_LISTENER_NAMES=${KAFKA_CONTROLLER_LISTENER_NAMES}
      - KAFKA_LOG_DIRS=${KAFKA_LOG_DIRS}
      - CLUSTER_ID=${CLUSTER_ID}
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=${KAFKA_AUTO_CREATE_TOPICS_ENABLE}
    volumes:
      - kafka_data:/tmp/kafka-data
    networks:
      - app-net
    
volumes:
  kafka_data:

networks:
  app-net:
    driver: bridge